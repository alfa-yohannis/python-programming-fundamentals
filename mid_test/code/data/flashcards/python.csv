"id","question","answer"
"1","What keyword defines a function?","def"
"2","Which data type stores True or False values?","bool"
"3","What symbol starts a comment?","#"
"4","How do you print text to console?","print()"
"5","Which brackets create a list?","[]"
"6","Which brackets create a tuple?","()"
"7","Which braces create a dictionary?","{}"
"8","What is the first index in Python lists?","0"
"9","How do you check the length of a list?","len()"
"10","What operator checks equality?","=="
"11","What operator checks identity?","is"
"12","What keyword defines a class?","class"
"13","What is the constructor method name?","__init__"
"14","What keyword imports a module?","import"
"15","How to import a specific name from a module?","from module import name"
"16","What handles exceptions?","try/except"
"17","What keyword raises an error?","raise"
"18","What creates an anonymous function?","lambda"
"19","What keyword defines a generator?","yield"
"20","How to iterate with indexes?","enumerate(list)"
"21","How to combine lists element-wise?","zip(a,b)"
"22","What keyword defines a loop?","for"
"23","How to stop a loop?","break"
"24","How to skip an iteration?","continue"
"25","What keyword defines a condition?","if"
"26","What represents no value?","None"
"27","How to check if an item is in a list?","in"
"28","How to get the last element?","list[-1]"
"29","How to slice first 3 items?","list[:3]"
"30","What function sorts a list?","sorted()"
"31","How to sort in place?","list.sort()"
"32","How to reverse a list?","list.reverse()"
"33","How to find data type?","type()"
"34","Convert string to int?","int()"
"35","Convert int to string?","str()"
"36","Read user input?","input()"
"37","Floor division operator?","//"
"38","Exponent operator?","**"
"39","Else-if keyword?","elif"
"40","Define else block?","else"
"41","Return from function?","return"
"42","Exit program?","exit()"
"43","Get random integer?","random.randint(a,b)"
"44","Round number?","round(x)"
"45","Absolute value?","abs(x)"
"46","Current working directory?","os.getcwd()"
"47","List directory files?","os.listdir()"
"48","Open file for read?","open(path,""r"")"
"49","Open file for write?","open(path,""w"")"
"50","Read all lines?","f.readlines()"
"51","Write to file?","f.write(""text"")"
"52","Parse JSON string?","json.loads()"
"53","Write JSON to file?","json.dump()"
"54","Get current date?","datetime.date.today()"
"55","Find regex in text?","re.match()"
"56","Replace text via regex?","re.sub()"
"57","Run test code only in main?","if __name__ == ""__main__"":"
"58","Define asynchronous function?","async def"
"59","Wait for async task?","await"
"60","Create virtual environment?","python -m venv env"
"61","Install a package?","pip install package"
"62","Check Python version?","python --version"
"63","List installed packages?","pip list"
"64","Check variable type at runtime?","isinstance(x,type)"
"65","Get help on a function?","help()"
"66","Get unique ID of object?","id()"
"67","Get attributes of object?","dir(object)"
"68","Get current environment variable?","os.getenv()"
"69","Pause for 1 second?","time.sleep(1)"
"70","Merge dicts (3.9+)?","a | b"
"71","Keyword for multiple inheritance?","class Child(Parent1,Parent2)"
"72","Keyword to call parent method?","super()"
"73","What is a decorator?","A function that modifies another function"
"74","Define decorator?","@decorator_name"
"75","What is docstring?","Triple quoted string describing code"
"76","What operator assigns a value?","="
"77","What operator combines addition and assignment?","+="
"78","What operator checks inequality?","!="
"79","What is the walrus operator?",":="
"80","How to format strings?","f""{name}"""
"81","Convert string to lowercase?","str.lower()"
"82","Convert to uppercase?","str.upper()"
"83","Remove spaces from ends?","str.strip()"
"84","Replace text?","str.replace(old,new)"
"85","Split string?","str.split()"
"86","Join list into string?",""", "".join(list)"
"87","Check if string starts with prefix?","str.startswith(prefix)"
"88","Check if string ends with suffix?","str.endswith(suffix)"
"89","Find substring position?","str.find(sub)"
"90","Capitalize first letter?","str.capitalize()"
"91","Convert list to set?","set(list)"
"92","Convert set to list?","list(set)"
"93","Convert list to tuple?","tuple(list)"
"94","Unpack list into variables?","a,b,c=list"
"95","Ignore value in unpacking?","_"
"96","List comprehension example?","[x*x for x in range(5)]"
"97","Filter even numbers in list comprehension?","[x for x in nums if x%2==0]"
"98","Flatten nested lists?","[x for row in matrix for x in row]"
"99","Reverse a string?","s[::-1]"
"100","Check palindrome?","s==s[::-1]"
"101","Check even number?","n%2==0"
"102","Sum list of numbers?","sum(list)"
"103","Get max value?","max(list)"
"104","Get min value?","min(list)"
"105","Find index of element?","list.index(x)"
"106","Count occurrences?","list.count(x)"
"107","Add element to list?","list.append(x)"
"108","Extend list?","list.extend(other)"
"109","Insert at position?","list.insert(0,x)"
"110","Remove element by value?","list.remove(x)"
"111","Remove last element?","list.pop()"
"112","Clear list?","list.clear()"
"113","Copy list?","list.copy()"
"114","Create empty list?","[]"
"115","Create empty dict?","{}"
"116","Get dictionary keys?","dict.keys()"
"117","Get dictionary values?","dict.values()"
"118","Access dict value safely?","dict.get(key)"
"119","Remove key?","dict.pop(key)"
"120","Check key in dict?","key in dict"
"121","Add to set?","set.add(x)"
"122","Remove from set?","set.remove(x)"
"123","Find intersection?","a & b"
"124","Find union?","a | b"
"125","Find difference?","a - b"
"126","Define nested function?","def inner(): pass"
"127","Return multiple values?","return a,b"
"128","Unpack multiple returns?","a,b=func()"
"129","Create class instance?","obj=Class()"
"130","Access object attribute?","obj.attr"
"131","Call object method?","obj.method()"
"132","Define static method?","@staticmethod"
"133","Define class method?","@classmethod"
"134","Define property?","@property"
"135","What is __str__ used for?","String representation"
"136","What is __repr__ used for?","Official representation"
"137","What is __len__ used for?","Length of object"
"138","What is __iter__ used for?","Make object iterable"
"139","What is __getitem__ used for?","Access elements via index"
"140","What is __setitem__ used for?","Assign element via index"
"141","What is __delitem__ used for?","Delete element"
"142","What is __call__ used for?","Make object callable"
"143","What is __eq__ used for?","Equality comparison"
"144","What is __lt__ used for?","Less than comparison"
"145","What is __add__ used for?","Addition operator"
"146","What is __sub__ used for?","Subtraction operator"
"147","What is __mul__ used for?","Multiplication operator"
"148","What is __truediv__ used for?","Division operator"
"149","What is __contains__ used for?","Membership test"
"150","What is __enter__ used for?","Context manager enter"
"151","What is __exit__ used for?","Context manager exit"
"152","Define dataclass?","@dataclass"
"153","Freeze dataclass?","@dataclass(frozen=True)"
"154","Default value in dataclass?","field(default=value)"
"155","Ignore field in dataclass?","field(repr=False)"
"156","Define abstract class?","from abc import ABC"
"157","Define abstract method?","@abstractmethod"
"158","Check instance type?","isinstance(obj,Class)"
"159","Check subclass?","issubclass(A,B)"
"160","Inspect object members?","inspect.getmembers(obj)"
"161","Show all globals?","globals()"
"162","Show all locals?","locals()"
"163","Run shell command?","os.system()"
"164","Exit program with code?","sys.exit()"
"165","Get Python executable path?","sys.executable"
"166","Import module dynamically?","importlib.import_module(name)"
"167","Reload a module?","importlib.reload(module)"
"168","Get command-line arguments?","sys.argv"
"169","Measure execution time?","time.time()"
"170","Format date to string?","strftime()"
"171","Parse string to date?","strptime()"
"172","Get current timestamp?","time.time()"
"173","Convert timestamp to date?","datetime.fromtimestamp()"
"174","Get CPU count?","os.cpu_count()"
"175","Get platform name?","platform.system()"
"176","Get Python version programmatically?","sys.version"
"177","What is a module docstring?","Top-of-file triple-quoted string"
"178","Get absolute file path?","os.path.abspath(path)"
"179","Join path parts?","os.path.join(a,b)"
"180","Check if path exists?","os.path.exists(path)"
"181","Check if path is a file?","os.path.isfile(path)"
"182","Check if path is a directory?","os.path.isdir(path)"
"183","Make a directory (no error if exists)?","os.makedirs(path, exist_ok=True)"
"184","Remove a file?","os.remove(path)"
"185","Rename a file?","os.rename(src,dst)"
"186","Iterate 0..n-1?","for i in range(n):"
"187","Create a range from a to b (exclusive)?","range(a,b)"
"188","Create a stepped range by 2?","range(start,stop,2)"
"189","What is a truthy value?","Evaluates to True in boolean context"
"190","What is a falsy value?","Evaluates to False in boolean context"
"191","Logical AND operator?","and"
"192","Logical OR operator?","or"
"193","Logical NOT operator?","not"
"194","Difference between == and is?","== compares values; is compares identity"
"195","String concatenation operator?","+"
"196","String repetition operator?","*"
"197","Convert to float?","float()"
"198","Convert to list?","list()"
"199","Create dict from key-value pairs?","dict(pairs)"
"200","Get ASCII code of a character?","ord(ch)"
"201","Get character from ASCII code?","chr(n)"
"202","Format with str.format()?","""{} {}"".format(a,b)"
"203","Pad string on the left?","str.rjust(width)"
"204","Pad string on the right?","str.ljust(width)"
"205","Center a string?","str.center(width)"
"206","Zero-fill a number string?","str.zfill(width)"
"207","Check if string is digits?","str.isdigit()"
"208","Check if string is alphabetic?","str.isalpha()"
"209","Check if string is alphanumeric?","str.isalnum()"
"210","Check if string is only spaces?","str.isspace()"
"211","Check if string is lowercase?","str.islower()"
"212","Check if string is uppercase?","str.isupper()"
"213","Swap letter case?","str.swapcase()"
"214","Title case a string?","str.title()"
"215","Partition a string by a separator?","str.partition(sep)"
"216","Split string into lines?","str.splitlines()"
"217","Find last index of substring?","str.rfind(sub)"
"218","Replace only first occurrence?","str.replace(old,new,1)"
"219","Remove prefix (3.9+)?","str.removeprefix(pfx)"
"220","Remove suffix (3.9+)?","str.removesuffix(sfx)"
"221","Get minimum element of iterable?","min(iterable)"
"222","Check if all values are true?","all(iterable)"
"223","Check if any value is true?","any(iterable)"
"224","Create dict comprehension?","{k:v for k,v in pairs}"
"225","Create set comprehension?","{x for x in iterable}"
"226","Open file for append?","open(path,""a"")"
"227","Open file for read and write?","open(path,""r+"")"
"228","Handle missing file exception?","except FileNotFoundError:"
"229","Generic base exception class?","Exception"
"230","Purpose of finally block?","Always runs cleanup"
"231","Purpose of try/except else?","Runs if no exception"
"232","Raise a ValueError?","raise ValueError()"
"233","Define default parameter value?","def f(x=0):"
"234","Define keyword-only argument?","def f(*, y):"
"235","Define positional-only parameter (3.8+)?","def f(x, /):"
"236","Accept arbitrary positional args?","def f(*args):"
"237","Accept arbitrary keyword args?","def f(**kwargs):"
"238","Unpack sequence into args?","f(*args)"
"239","Unpack dict into kwargs?","f(**kwargs)"
"240","Get a function's name?","func.__name__"
"241","Get a function's docstring?","func.__doc__"
"242","Declare a global variable?","global name"
"243","Declare a nonlocal variable?","nonlocal name"
"244","Create a CLI argument parser?","argparse.ArgumentParser()"
"245","Write an info log message?","logging.info(msg)"
"246","Set logging level to DEBUG?","logging.basicConfig(level=logging.DEBUG)"
"247","Write a CSV row?","csv.writer(f).writerow(row)"
"248","Read CSV rows as dicts?","csv.DictReader(f)"
"249","Serialize object to JSON string?","json.dumps(obj)"
"250","Deserialize JSON from a file?","json.load(f)"
